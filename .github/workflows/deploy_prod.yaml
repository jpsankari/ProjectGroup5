name: Full PROD Deployment

run-name: CE10-Group5 is deploying to PROD ðŸš€

on:
  workflow_run:
    workflows: ["Full DEV Deployment"]   # Must match the name from dev.yml
    types:
      - completed

permissions:
  id-token: write      # Required for OIDC
  contents: read

jobs:
  CI:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment: prod

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: List Files for Debugging
        run: ls -la

      - name: List Env Directory Contents for Debugging
        run: ls -la ./envs/prod

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::255945442255:role/sankari-github-oidc-deploy-role
          aws-region: ap-southeast-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        run: terraform fmt --recursive
        working-directory: './envs/prod'

      - name: Terraform Init
        run: terraform init
        working-directory: './envs/prod'

      - name: Terraform Validate
        run: terraform validate -no-color
        working-directory: './envs/prod'

      - name: Terraform Plan
        run: terraform plan
        working-directory: './envs/prod'

  CD:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    needs: CI
    environment: dev
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::255945442255:role/sankari-github-oidc-deploy-role
          aws-region: ap-southeast-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init 
        working-directory: './envs/prod'

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: './envs/prod'

      - name: Export Terraform Outputs
        id: tfout
        shell: bash
        run: |
          echo "CF_ID=$(terraform output -raw cf_id)" >> $GITHUB_ENV
          echo "S3_NAME=$(terraform output -raw bucket_name)" >> $GITHUB_ENV
          echo "CF_DOMAIN=$(terraform output -raw cf_domain)" >> $GITHUB_ENV
          echo "API_ENDPOINT=$(terraform output -raw api_endpoint)" >> $GITHUB_ENV
        working-directory: './envs/prod'

      - name: Replace API Endpoint in index.html
        run: |
         sed -i "s|{{API_ENDPOINT}}|${{ env.API_ENDPOINT }}|g" ./static-website/index.html

      - name: S3 Deployment
        run: aws s3 sync . s3://${{ env.S3_NAME }}
        working-directory: ./static-website

      - name: Invalidate cache
        run: aws cloudfront create-invalidation --distribution-id ${{ env.CF_ID }} --paths "/*"

      - name: Output CF domain
        run: echo "ðŸš€ Deployed to https://${{ env.CF_DOMAIN }}"
  
