name: Destroy AWS Infrastructure

on:
  workflow_dispatch:

env:
  AWS_REGION: ap-southeast-1
  CF_ID: EVVXZ25IZSNQP  # Replace with actual CloudFront ID
  LOG_GROUP_NAME: "/aws/lambda/process_order_dev"

jobs:
  destroy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Disable CloudFront Distribution
        id: disable_cf
        run: |
          echo "Disabling CloudFront distribution: $CF_ID"
          CONFIG_JSON=$(aws cloudfront get-distribution-config --id "$CF_ID")
          ETAG=$(echo "$CONFIG_JSON" | jq -r '.ETag')
          DIST_CONFIG=$(echo "$CONFIG_JSON" | jq '.DistributionConfig | .Enabled=false')
          echo "$DIST_CONFIG" > dist-config.json

          aws cloudfront update-distribution \
            --id "$CF_ID" \
            --if-match "$ETAG" \
            --distribution-config file://dist-config.json

      - name: Wait for CloudFront to disable
        run: |
          echo "Waiting 60 seconds for CloudFront disable to propagate..."
          sleep 60

      - name: Delete CloudFront Distribution
        run: |
          echo "Deleting CloudFront distribution: $CF_ID"
          ETAG=$(aws cloudfront get-distribution-config --id "$CF_ID" --query 'ETag' --output text)
          aws cloudfront delete-distribution --id "$CF_ID" --if-match "$ETAG"

      - name: Manually delete Lambda log group
        continue-on-error: true
        run: |
          echo "Deleting CloudWatch log group: $LOG_GROUP_NAME"
          aws logs delete-log-group --log-group-name "$LOG_GROUP_NAME" || echo "Log group may not exist or already deleted."

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve

