name: Full DEV Deployment

run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€


on: 
  push:
    branches:
      - main
   # paths:
    #  - 'envs/dev/**'


permissions:
  id-token: write      # <- This is required for OIDC
  contents: read

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: List Files for Debugging
        run: ls -la
        # This will help you confirm that the directory structure is as expected
    
      - name: List Env Directory Contents for Debugging
        run: ls -la ./envs/dev
        # This will show if the envs/dev directory exists

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::255945442255:role/sankari-github-oidc-deploy-role
          aws-region: ap-southeast-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        run: terraform fmt --recursive
        working-directory: './envs/dev'
    
      - name: Terraform Init
        run: terraform init
        working-directory: './envs/dev'
    
      - name: Terraform Validate
        run: terraform validate -no-color
        working-directory: './envs/dev'

      - name: Terraform Plan
        run: terraform plan
        working-directory: './envs/dev'
  
  integration-tests:
    runs-on: ubuntu-latest
    needs: CD
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Run Integration Tests
        run: bash scripts/run-integration-tests.sh | tee -a result.log

      - name: Upload test summary
        uses: actions/upload-artifact@v3
        with:
          name: integration-results
          path: result.log

  CD:
    runs-on: ubuntu-latest
    needs: CI
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::255945442255:role/sankari-github-oidc-deploy-role
          aws-region: ap-southeast-1


      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
    
      - name: Terraform Init
        run: terraform init 
        working-directory: './envs/dev'

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: './envs/dev'

      - name: Export Terraform Outputs
        id: tfout
        shell: bash
        run: |
          echo "CF_ID=$(terraform output -raw cf_id)" >> $GITHUB_ENV
          echo "S3_NAME=$(terraform output -raw bucket_name)" >> $GITHUB_ENV
          echo "CF_DOMAIN=$(terraform output -raw cf_domain)" >> $GITHUB_ENV
          echo "API_ENDPOINT=$(terraform output -raw api_endpoint)" >> $GITHUB_ENV

        working-directory: './envs/dev'

      - name: Replace API Endpoint in index.html
        run: |
         sed -i "s|{{API_ENDPOINT}}|${{ env.API_ENDPOINT }}|g" ./static-website/index.html

      - name: S3 Deployment
        run: aws s3 sync . s3://${{ env.S3_NAME }}
        working-directory: ./static-website

      - name: Invalidate cache
        run: aws cloudfront create-invalidation --distribution-id ${{ env.CF_ID }} --paths "/*"

      - name: Output CF domain

        run: echo "${{ env.CF_DOMAIN }}"


  approval:
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - name: Download test results
        uses: actions/download-artifact@v3
        with:
          name: integration-results

      - name: Show test results in log
        run: cat result.log

      - name: Await Manual Approval
        uses: peter-evans/manual-approval@v1
        with:
          # Optional: assign specific reviewers
          reviewers: cathyloi,johnboscos,laoniu-meow,sandhyakaranam88 # Optional, specify who can approve
          instructions: |
            Integration tests passed. See the logs above for details.
            Approve to continue with deployment to production.
          timeout-minutes: 1440

   